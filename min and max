struct Node {
    int data;
    struct Node* left;
    struct Node* right;
};

struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}

void findMinMaxValues(struct Node* root, int *minValue, int *maxValue) {
    if (root == NULL) {
        return;
    }

    if (root->data < *minValue) {
        *minValue = root->data;
    }

    if (root->data > *maxValue) {
        *maxValue = root->data;
    }

    findMinMaxValues(root->left, minValue, maxValue);
    findMinMaxValues(root->right, minValue, maxValue);
}

int main() {
    // Create a sample binary tree
    struct Node* root = createNode(10);
    root->left = createNode(5);
    root->right = createNode(20);
    root->left->left = createNode(3);
    root->left->right = createNode(8);
    root->right->left = createNode(15);
    root->right->right = createNode(25);

    int minValue = INT_MAX;
    int maxValue = INT_MIN;
    
    findMinMaxValues(root, &minValue, &maxValue);

    printf("Minimum Value: %d\n", minValue);
    printf("Maximum Value: %d\n", maxValue);
    
    return 0;
}

